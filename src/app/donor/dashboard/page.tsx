'use client';

import React, { useState, useEffect } from 'react';
import { useSession, signOut } from 'next-auth/react';
import { useLocale } from '@/app/context/LocaleContext';
import styles from './dashboard.module.css';
import { useRouter } from 'next/navigation';

// ุชุนุฑูู ูุงุฌูุฉ ูุจูุงูุงุช ููุฎุต ุงููุชุจุฑุน
interface DonorSummaryData {
    totalDonationsAmount: number;
    supportedProjectsCount: number;
    lastDonationStatus: string;
}

// ูุงุฌูุฉ ูุจูุงูุงุช ุงูุชุจุฑุน ุงููุฑุฏู
interface Donation {
    amount: number;
    caseName: string;
    status: string;
    donationDate: string;
}

// ูููุฉ ุฃูููุฉ ุซุงุจุชุฉ ูููุฎุต ุงููุชุจุฑุน ูู ุญุงูุฉ ุนุฏู ูุฌูุฏ ุจูุงูุงุช
const EMPTY_SUMMARY: DonorSummaryData = {
    totalDonationsAmount: 0,
    supportedProjectsCount: 0,
    lastDonationStatus: 'ูุง ุชูุฌุฏ ุชุจุฑุนุงุช',
};

const DonorDashboardOverviewPage: React.FC = () => {
    const { data: session, status } = useSession();
    const { formatCurrency } = useLocale();
    const router = useRouter();

    // ุงููููุฉ ุงูุฃูููุฉ ูู null ููุฏูุงูุฉ ุนูู ุนุฏู ุงูุชูุงุก ุงูุชุญููู
    const [summaryData, setSummaryData] = useState<DonorSummaryData | null>(null);
    const [donations, setDonations] = useState<Donation[] | null>(null);
    const [isLoadingData, setIsLoadingData] = useState(true);
    const [error, setError] = useState('');

    const isAuthenticated = status === "authenticated";
    const isLoadingAuth = status === "loading";

    useEffect(() => {
        if (!isLoadingAuth && !isAuthenticated) {
            // ุชูุฌูู ุฅูู ุตูุญุฉ ุชุณุฌูู ุงูุฏุฎูู ุฅุฐุง ูู ููู ุงููุณุชุฎุฏู ูุตุงุฏูุงู
            signOut({ redirect: true, callbackUrl: '/auth/login' });
            return;
        }

        if (isAuthenticated && session?.user) {

            // ูุธููุฉ ูุฌูุจ ูุงุฆูุฉ ุงูุชุจุฑุนุงุช
            const fetchDonorDonations = async () => {
                setError('');
                setIsLoadingData(true); // ุงุจุฏุฃ ุงูุชุญููู
                try {
                    // ูุฌุจ ุฃู ูุชุถูู ุทูุจ API userId ุฃู ุขููุฉ ูุตุงุฏูุฉ ูุงุณุชุฑุฌุงุน ุชุจุฑุนุงุช ุงููุณุชุฎุฏู
                    const response = await fetch('/api/sanad-donations', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                            // ูุฏ ุชุญุชุงุฌ ููุง ูุฅุฑุณุงู ุงูุชููู/ุงููุตุงุฏูุฉ ุงูุฎุงุตุฉ ุจู Sanad API ุฅุฐุง ูู ููู Next-Auth ูุงููุงู
                        },
                    });
                    
                    if (!response.ok) {
                        const contentType = response.headers.get("content-type");
                        let errorMsg = 'ูุดู ุฌูุจ ูุงุฆูุฉ ุงูุชุจุฑุนุงุช: ุงุณุชุฌุงุจุฉ ุบูุฑ ูุชููุนุฉ.';
                        
                        if (contentType && contentType.includes("application/json")) {
                            const errorData = await response.json();
                            errorMsg = errorData.error || errorData.message || errorMsg;
                        }
                        
                        throw new Error(errorMsg);
                    }
                    
                    const data = await response.json();
                    
                    // ๐จ ุชุฃูุฏ ุฃู ุงูู API ุงูุฎููู ูุฑุฌุน ูุตูููุฉ ุงูุชุจุฑุนุงุช ุชุญุช ููุชุงุญ 'donations' 
                    // ูุฅูุง ูุฏ ุชุญุชุงุฌ ูุชุบููุฑ data.donations ุฅูู data ุฅุฐุง ูุงู ูุฑุฌุน ุงููุตูููุฉ ูุจุงุดุฑุฉ
                    const receivedDonations: Donation[] = Array.isArray(data.donations) ? data.donations : [];

                    if (receivedDonations.length > 0) {
                        setDonations(receivedDonations);
                        
                        // โจ ุญุณุงุจ ุจูุงูุงุช ุงูููุฎุต ูู ูุงุฆูุฉ ุงูุชุจุฑุนุงุช
                        const totalDonationsAmount = receivedDonations.reduce((sum: number, donation: Donation) => sum + donation.amount, 0);
                        
                        // ุฌูุน ุฃุณูุงุก ุงููุดุงุฑูุน (caseName) ุงููุฑูุฏุฉ
                        const supportedProjectsCount = new Set(receivedDonations.map(d => d.caseName).filter(name => name && name !== 'ุบูุฑ ูุญุฏุฏ')).size;
                        
                        // ุขุฎุฑ ุชุจุฑุน ูู ุฃูู ุนูุตุฑ (ููุชุฑุถ ุฃู ุงููุงุฆูุฉ ูุฑุชุจุฉ ุชูุงุฒูููุง ุญุณุจ ุงูุชุงุฑูุฎ)
                        const lastDonationStatus = receivedDonations[0].status || 'ุบูุฑ ูุชููุฑ';
                        
                        setSummaryData({
                            totalDonationsAmount,
                            supportedProjectsCount,
                            lastDonationStatus
                        });

                    } else {
                        // ุญุงูุฉ ุนุฏู ูุฌูุฏ ุชุจุฑุนุงุช
                        setDonations([]);
                        setSummaryData(EMPTY_SUMMARY);
                    }

                } catch (err: any) {
                    setError(err.message || 'ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน ุฃุซูุงุก ุฌูุจ ูุงุฆูุฉ ุงูุชุจุฑุนุงุช.');
                    setDonations([]);
                    setSummaryData(EMPTY_SUMMARY);
                    console.error('Error fetching donor donations:', err);
                } finally {
                    setIsLoadingData(false);
                }
            };
            
            fetchDonorDonations();
        }
        // ุฅุถุงูุฉ setDonations ู setSummaryData ูู dependencies ูููุน ESLint warnings 
        // ุฑุบู ุฃูููุง ูุชู ุชุนูููููุง ุฏุงุฎู ุงูุฏุงูุฉ fetchDonorDonations
    }, [isAuthenticated, isLoadingAuth, session, router]);

    if (isLoadingData || isLoadingAuth) {
        return (
            <div className={styles.dashboardContent}>
                <div className={styles.loadingContainer}>
                    <div className={styles.spinner}></div>
                    <p>ุฌุงุฑู ุชุญููู ุจูุงูุงุช ุญุณุงุจู...</p>
                </div>
            </div>
        );
    }

    if (error) {
        return (
            <div className={styles.dashboardContent}>
                <div className={styles.errorMessage}>
                    <p>ุนููุงูุ ูู ูุชููู ูู ุนุฑุถ ููุญุฉ ุงูุชุญูู.</p>
                    <p className={styles.errorDetails}>{error}</p>
                    <button 
                        onClick={() => window.location.reload()}
                        className={styles.retryButton}
                    >
                        ุฅุนุงุฏุฉ ุงููุญุงููุฉ
                    </button>
                </div>
            </div>
        );
    }
    
    // ุชุฃูุฏ ูู ูุฌูุฏ ุงูุจูุงูุงุช ูุจู ุนุฑุถูุง
    const displayName = session?.user?.name || session?.user?.email || 'ูุชุจุฑุน';
    const currentSummary = summaryData || EMPTY_SUMMARY;
    const currentDonations = donations || [];

    return (
        <div className={styles.dashboardContent}>
            <h1 className={styles.pageTitle}>ูุฑุญุจุงู ุจูุ {displayName}!</h1>
            <p className={styles.pageDescription}>
                ููุง ููููู ูุชุงุจุนุฉ ูุดุงุทู ูู &quot;ุณูุฏ&quot; ูุงูุงุทูุงุน ุนูู ุฃุญุฏุซ ุงููุดุงุฑูุน ูุงูุฅูุฌุงุฒุงุช.
            </p>

            {/* ูุณู ููุฌุฒ ูุฃูุดุทุฉ ุงููุชุจุฑุน */}
            <div className={styles.summaryGrid}>
                <div className={styles.summaryCard}>
                    <h3>ุฅุฌูุงูู ุชุจุฑุนุงุชู</h3>
                    <p className={styles.summaryValue}>{formatCurrency(currentSummary.totalDonationsAmount)}</p>
                    <p className={styles.summaryLabel}>ุงููุจูุบ ุงูุฅุฌูุงูู ุงูุฐู ุณุงููุช ุจู.</p>
                </div>
                <div className={styles.summaryCard}>
                    <h3>ูุดุงุฑูุนู ุงููุฏุนููุฉ</h3>
                    <p className={styles.summaryValue}>{currentSummary.supportedProjectsCount}</p>
                    <p className={styles.summaryLabel}>ุนุฏุฏ ุงููุดุงุฑูุน ุงูุชู ุฏุนูุชูุง ุญุชู ุงูุขู.</p>
                </div>
                <div className={styles.summaryCard}>
                    <h3>ุญุงูุฉ ุขุฎุฑ ุชุจุฑุน</h3>
                    <p className={styles.summaryValue}>{currentSummary.lastDonationStatus}</p>
                    <p className={styles.summaryLabel}>ุขุฎุฑ ุชุจุฑุน ูู ุญุงููุงู ูู ูุฑุญูุฉ ุงูุชูููุฐ.</p>
                </div>
            </div>
            
            {/* ๐ ูุณู ุฌุฏูุฏ ูุนุฑุถ ูุงุฆูุฉ ุงูุชุจุฑุนุงุช */}
            <div className={styles.donationsSection}>
                <h2 className={styles.sectionTitle}>ุขุฎุฑ ุชุจุฑุนุงุชู</h2>
                {currentDonations.length > 0 ? (
                    <ul className={styles.donationsList}>
                        {currentDonations.map((donation, index) => (
                            <li key={index} className={styles.donationItem}>
                                <div className={styles.donationDetails}>
                                    <span className={styles.donationAmount}>{formatCurrency(donation.amount)}</span>
                                    {/* ุงูุชุฃูุฏ ูู ุชูุณูู ุงูุชุงุฑูุฎ ุจุดูู ุขูู */}
                                    <span className={styles.donationDate}>ุงูุชุงุฑูุฎ: {new Date(donation.donationDate).toLocaleDateString() || 'ุบูุฑ ูุชููุฑ'}</span>
                                </div>
                                <div className={styles.donationCase}>ูุตุงูุญ ูุดุฑูุน: {donation.caseName || 'ุชุจุฑุน ุชุดุบููู/ุบูุฑ ูุญุฏุฏ'}</div>
                                <div className={styles.donationStatus}>ุงูุญุงูุฉ: {donation.status || 'ุบูุฑ ูุญุฏุฏ'}</div>
                            </li>
                        ))}
                    </ul>
                ) : (
                    <p className={styles.noDataMessage}>ูู ุชูู ุจุฃู ุชุจุฑุนุงุช ุญุชู ุงูุขู.</p>
                )}
            </div>

        </div>
    );
};

export default DonorDashboardOverviewPage;
